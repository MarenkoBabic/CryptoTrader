@model CryptoTrader.Model.ViewModel.BankTransferViewModel
@{
    ViewBag.Title = "PayOut";
}
<link href="~/Content/Custom/_payOut.css" rel="stylesheet" />
@using (Html.BeginForm("PayOut", "BankTransfer", FormMethod.Post))
{
    <main class="col-lg-6 col-md-6 col-sm-6 col-xs-6 wellPayOut well" style="height:306px;">
        <h2>Geld auszahlen</h2>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.FirstName, "Vorname")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.FirstName, Model.FirstName)
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.LastName, "Nachname")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.LastName, Model.LastName)
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.PersonIban, "Iban")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @if (Model.PersonIban == null)
                {
                    @Html.EditorFor(a => a.PersonIban, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.LabelFor(a => a.PersonIban, Model.PersonIban)
                }
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.PersonBic, "BIC")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @if (Model.PersonBic == null)
                {
                    @Html.EditorFor(a => a.PersonBic, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.LabelFor(a => a.PersonBic, Model.PersonBic)
                }
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.Amount, "Betrag")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.EditorFor(a => a.Amount, new { htmlAttributes = new { @class = "form-control", onKeyUp = "validate(this)" } })
                @Html.ValidationMessageFor(a => a.Amount, "", new { htmlAttributes = new { @class = "text-danger" } })
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @Html.LabelFor(a => a.Currency, "Währung")
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                @if (Model.Currency == null)
                {
                    @Html.EditorFor(a => a.Currency, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(a => a.Currency, "", new { htmlAttributes = new { @class = "text-danger" } })
                }
                else
                {
                    @Html.LabelFor(a => a.Currency, Model.Currency)
                }
            </div>
        </div>

        <div class="row buttonPayOut">
            <button type="submit" class="ui-button-icon-only btn-success">Auszahlen</button>
        </div>
    </main>
}
<script>
    function validate(that) {
        console.log("test");
        that.value = that.value.replace(/[^\d,]/g, "").replace(/[,+]/g,",");
        
    }
</script>
